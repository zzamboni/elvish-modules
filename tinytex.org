#+title: TinyTeX module
#+author: Diego Zamboni
#+email: diego@zzamboni.org

#+name: module-summary
Convenience functions for [[https://yihui.org/tinytex/][TinyTeX]].

I have started using [[https://yihui.org/tinytex/][TinyTeX]] to avoid having a gigantic TeX/LaTeX distribution on my system. This module has some convenience functions I have written to automate some things.

* Table of Contents :TOC_3:noexport:
- [[#usage][Usage]]
- [[#implementation][Implementation]]
  - [[#install-tinytex][Install TinyTex]]
  - [[#install-missing-packages-by-file][Install missing packages by file]]
  - [[#install-missing-packages-based-on-latex-output][Install missing packages based on LaTeX output]]

* Usage

Install the =elvish-modules= package using [[https://elvish.io/ref/epm.html][epm]]:

#+begin_src elvish
use epm
epm:install github.com/zzamboni/elvish-modules
#+end_src

In your =rc.elv=, load this module:

#+begin_src elvish
use github.com/zzamboni/elvish-modules/tinytex
#+end_src

For now, the only function is =tinytex:install-by-file=, which takes a filename, searches for the package which contains that file, and installs it. If only one package matches the file, everything happens automatically:

#+begin_src console
  [~]─> tinytex:install-by-file ifmtarg.sty
  Installing package ifmtarg
  tlmgr: package repository http://mirror.kumi.systems/ctan/systems/texlive/tlnet (verified)
  [1/1, ??:??/??:??] install: ifmtarg [1k]
  running mktexlsr ...
  done running mktexlsr.
  tlmgr: package log updated: /Users/taazadi1/Library/TinyTeX/texmf-var/web2c/tlmgr.log
#+end_src

If more than one package matches the file, it shows you the search results, and you can choose which of the matching packages you want to install:

#+begin_src console
  [~]─> tinytex:install-by-file biber
  There are multiple packages which contain a matching file:
  tlmgr: package repository http://mirror.kumi.systems/ctan/systems/texlive/tlnet (verified)
  0) 00texlive.image:
  	tlpkg/tlpsrc/biber.tlpsrc
  1) arara:
  	texmf-dist/scripts/arara/rules/biber.yaml
  2) biber:
  	texmf-dist/doc/bibtex/biber/biber.pdf
  	texmf-dist/source/bibtex/biber/Changes
  	texmf-dist/source/bibtex/biber/README.md
  	texmf-dist/source/bibtex/biber/biblatex-biber.tar.gz
  	texmf-dist/source/bibtex/biber/utf8-macro-map.html
  3) biber.amd64-freebsd:
  	bin/amd64-freebsd/biber
  4) biber.i386-cygwin:
  	bin/i386-cygwin/biber.exe
  5) biber.i386-freebsd:
  	bin/i386-freebsd/biber
  ...
  17) dickimaw:
  	texmf-dist/doc/latex/dickimaw/src/thesis/pictures/bibertool.png
  Please enter the numbers of the packages to install (comma-or-space-separated,
  empty to cancel): 2
  Packages selected: biber
  Installing package biber
  tlmgr: package repository http://mirror.kumi.systems/ctan/systems/texlive/tlnet (verified)
  [1/2, ??:??/??:??] install: biber.x86_64-darwin [27656k]
  [2/2, 00:13/00:13] install: biber [1k]
  tlmgr: package log updated: /Users/taazadi1/Library/TinyTeX/texmf-var/web2c/tlmgr.log
#+end_src

* Implementation
:PROPERTIES:
:header-args:elvish: :tangle (concat (file-name-sans-extension (buffer-file-name)) ".elv")
:header-args: :mkdirp yes :comments no
:END:

Load libraries

#+begin_src elvish
  use re
  use str
#+end_src

** Install TinyTex

Detect which utility to use, and run the appropriate command.

#+begin_src elvish
  fn install {
    var opt = ""
    var url = "https://yihui.org/gh/tinytex/tools/install-unx.sh"
    if ?(var cmd = (which curl)) {
      set opt = "-sL"
    } elif ?(set cmd = (which wget)) {
      set opt = "-qO-"
    } else {
      echo "I couldn't find curl nor wget in your path."
      exit 1
    }
    echo (styled "Installing TinyTeX with `"$cmd" "$opt" "$url" | sh`" green)
    (external $cmd) $opt $url | sh
  }
#+end_src

** Install missing packages by file

If a LaTeX compile tells me a certain file is missing, I can just type =tinytex:install-by-file <file>=, which automates searching for the package which contains the file, and then installing it.

#+begin_src elvish
  fn install-by-file {|f|
    var search-res = [(tlmgr search --global --file "/"$f )]
    var pkgs = [(each {|l| if (eq $l[-1] ":") { put $l[0..-1] } } $search-res)]
    if (> (count $pkgs) 1) {
      var i = 0
      echo (styled "There are multiple packages which contain a matching file:" blue)
      each {|l|
        if (eq $l[-1] ":") {
          echo (styled $i") "$l yellow)
          set i = (+ $i 1)
        } else {
          echo $l
        }
      } $search-res
      print (styled "Please enter the numbers of the packages to install (comma-or-space-separated, empty to cancel): " blue)
      var resp = (read-upto "\n")[0..-1]
      set pkgs = [(re:split "[, ]+" $resp | each {|n| if (not-eq $n '') { put $pkgs[$n] } })]
      if (> (count $pkgs) 0) {
        echo (styled "Packages selected: "(str:join ", " $pkgs) yellow)
      }
    }
    each {|pkg|
      echo (styled "Installing package "$pkg blue)
      tlmgr install $pkg
    } $pkgs
  }
#+end_src

** Install missing packages based on LaTeX output

If you have a file that is missing a few packages, you can repeatedly pipe its output into =tinytex:install-missing-file= to automatically capture the missing file and call =tinytex:install-by-file= to install the corresponding package.

This is to be used like this:
#+begin_src shell :tangle no
latex file.tex | tinytex:install-missing-file
#+end_src

#+begin_src elvish
  fn install-missing-file {
    each {|l|
      echo $l
      if (re:match 'LaTeX Error:.*not found' $l) {
        var pkg = (re:find 'LaTeX Error: File `(.*)'' not found' $l)[groups][1][text]
        echo (styled "Type 'x' and press Enter to install the missing file "$pkg yellow)
        install-by-file $pkg
      }
    }
  }
#+end_src
