#+title: Dynamic terminal title for Elvish
#+author: Diego Zamboni
#+email: diego@zzamboni.org

#+name: module-summary
Sets the terminal title dynamically using ANSI escape codes. By default the current directory is shown, and the name of the current command while one is executing.

This file is written in [[https://leanpub.com/lit-config][literate programming style]], to make it easy to explain. See [[file:terminal-title.elv][terminal-title.elv]] for the generated file.

* Table of Contents :TOC:noexport:
- [[#usage][Usage]]
- [[#implementation][Implementation]]

* Usage

Install the =elvish-modules= package using [[https://elvish.io/ref/epm.html][epm]]:

#+begin_src elvish
use epm
epm:install github.com/zzamboni/elvish-modules
#+end_src

In your =rc.elv=, load this module:

#+begin_src elvish
use github.com/zzamboni/elvish-modules/terminal-title
#+end_src

By default the terminal title will show the name of the command being executed or the word =elvish=, followed by the current path. You can customize the titles by setting the =$terminal-title:title-during-prompt= and =$terminal-title:title-during-command= variables to lambdas that determine the title to set while the prompt is displayed (i.e. while you are typing a command) and while a command is being executed, respectively. These are their default values:

#+name: title-during-prompt-default
#+begin_src elvish
var title-during-prompt = {
  put "elvish "(tilde-abbr $pwd)
}
#+end_src

#+name: title-during-command-default
#+begin_src elvish
var title-during-command = {|cmd|
  put (edit:wordify $cmd | take 1)" "(tilde-abbr $pwd)
}
#+end_src

* Implementation
:PROPERTIES:
:header-args:elvish: :tangle (concat (file-name-sans-extension (buffer-file-name)) ".elv")
:header-args: :mkdirp yes :comments no
:END:

#+begin_src elvish :exports none
  # DO NOT EDIT THIS FILE DIRECTLY
  # This is a file generated from a literate programing source file located at
  # https://github.com/zzamboni/elvish-modules/blob/master/terminal-title.org
  # You should make any changes there and regenerate it from Emacs org-mode using C-c C-v t
#+end_src

We load the [[https://github.com/zzamboni/elvish-modules/blob/master/prompt-hooks.org][prompt-hooks]] and [[https://elvish.io/ref/re.html][re]] libraries.

#+begin_src elvish
  use ./prompt-hooks
  use re
  use str
#+end_src

The ANSI escape sequences to start/end the title setting can be configured in the =$terminal-title:start= and =$terminal-title:end= variables. The default values work with [[http://tldp.org/HOWTO/Xterm-Title-3.html][xterm]] terminal types (including Terminal.app on macOS with the =xterm-256color= terminal type, which I use), but you can change them if needed.

#+begin_src elvish
  var start = "\e]0;"
  var end = "\007"
#+end_src

The =set-title= function takes a string and sets it as the current terminal title.

#+begin_src elvish
  fn set-title {|@title|
    var title-str = (str:join ' ' $title)
    print $start$title-str$end
  }
#+end_src

The =$terminal-title:title-during-prompt= and =$terminal-title:title-during-command= variables contain lambdas that determine the title to set while the prompt is displayed (i.e. while you are typing a command) and while a command is being executed, respectively.

=title-during-prompt= takes no parameters, and by default shows the word "elvish" followed by the current directory.

#+begin_src elvish :noweb yes
<<title-during-prompt-default>>
#+end_src

=title-during-command= received one parameter containing the command that will be executed. By default shows the command name followed by the current directory.

#+begin_src elvish :noweb yes
<<title-during-command-default>>
#+end_src

The =init= function sets up the corresponding prompt hooks and after-chdir hook. The after-chdir hook is needed for cases such as navigating with the built-in Elvish location and navigation modes.

#+begin_src elvish
  fn init {
    prompt-hooks:add-before-readline {
      set-title ($title-during-prompt)
    }
    prompt-hooks:add-after-readline {|cmd|
      set-title ($title-during-command $cmd)
    }
    set after-chdir = [ $@after-chdir {|dir|
      set-title ($title-during-prompt)
    } ]
  }
#+end_src

We call =init= automatically upon module load.

#+begin_src elvish
  init
#+end_src
