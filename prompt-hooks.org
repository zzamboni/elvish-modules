#+title: Prompt hook manipulation library for Elvish
#+author: Diego Zamboni
#+email: diego@zzamboni.org

#+name: module-summary
Convenience functions to add hooks to the prompt hook lists.

* Table of Contents                                            :TOC:noexport:
- [[#usage][Usage]]
- [[#implementation][Implementation]]

* Usage

Install the =elvish-modules= package using [[https://elvish.io/ref/epm.html][epm]]:

#+begin_src elvish
use epm
epm:install github.com/zzamboni/elvish-modules
#+end_src

In your =rc.elv=, load this module:

#+begin_src elvish
use github.com/zzamboni/elvish-modules/prompt-hooks
#+end_src

=$edit:before-readline= hooks are executed before right after the prompt is shown. =$edit:after-readline= hooks are executed after the user presses Enter, before the command is executed. The typed command is passed as argument to =after-readline= hooks.

Use like this:

#+begin_src elvish
prompt-hooks:add-before-readline { code to execute } ...
prompt-hooks:add-after-readline { code to execute } ...
#+end_src

Multiple hooks can be added, they execute in sequence.

* Implementation
:PROPERTIES:
:header-args:elvish: :tangle (concat (file-name-sans-extension (buffer-file-name)) ".elv")
:header-args: :mkdirp yes :comments no
:END:

Each function adds the given hooks to the corresponding variable, if it's not there already.

#+begin_src elvish
  fn add-before-readline {|@hooks|
    each {|hook|
      if (not (has-value $edit:before-readline $hook)) {
        set edit:before-readline = [ $@edit:before-readline $hook ]
      }
    } $hooks
  }

  fn add-after-readline {|@hooks|
    each {|hook|
      if (not (has-value $edit:after-readline $hook)) {
        set edit:after-readline = [ $@edit:after-readline $hook ]
      }
    } $hooks
  }
#+end_src
